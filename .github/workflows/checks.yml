jobs:
  test-lint:
    name: Test and Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Set environment variables from GitHub Secrets
        run: |
          echo "PUBLIC_IP=${{ secrets.PUBLIC_IP }}" >> .env
          echo "FASTAPI_PORT=${{ secrets.FASTAPI_PORT }}" >> .env
          echo "VUE_APP_API_URL=${{ secrets.VUE_APP_API_URL }}" >> .env
          echo "CORS_ALLOWED_ORIGIN=${{ secrets.CORS_ALLOWED_ORIGIN }}" >> .env
          echo "OAUTH_CLIENT_ID=${{ secrets.OAUTH_CLIENT_ID }}" >> .env
          echo "OAUTH_CLIENT_SECRET=${{ secrets.OAUTH_CLIENT_SECRET }}" >> .env
          echo "KOREAUNIV_OPENAPI_CLIENT_ID=${{ secrets.KOREAUNIV_OPENAPI_CLIENT_ID }}" >> .env
          echo "KOREAUNIV_OPENAPI_CLIENT_SECRET=${{ secrets.KOREAUNIV_OPENAPI_CLIENT_SECRET }}" >> .env
          echo "STUDENT_SYNC_URL=${{ secrets.STUDENT_SYNC_URL }}" >> .env
          echo "REPO_SYNC_URL=${{ secrets.REPO_SYNC_URL }}" >> .env
          echo "REPO_COMMIT_SYNC_URL=${{ secrets.REPO_COMMIT_SYNC_URL }}" >> .env
          echo "REPO_ISSUE_SYNC_URL=${{ secrets.REPO_ISSUE_SYNC_URL }}" >> .env
          echo "REPO_PR_SYNC_URL=${{ secrets.REPO_PR_SYNC_URL }}" >> .env
          echo "REPO_CONTRIBUTOR_SYNC_URL=${{ secrets.REPO_CONTRIBUTOR_SYNC_URL }}" >> .env
          echo "COURSE_OS_SYNC_URL=${{ secrets.COURSE_OS_SYNC_URL }}" >> .env
          echo "COURSE_CAPSTONE_SYNC_URL_1=${{ secrets.COURSE_CAPSTONE_SYNC_URL_1 }}" >> .env
          echo "COURSE_CLOUD_SYNC_URL=${{ secrets.COURSE_CLOUD_SYNC_URL }}" >> .env
          echo "COURSE_SW_PROJECT_SYNC_URL=${{ secrets.COURSE_SW_PROJECT_SYNC_URL }}" >> .env
          echo "COURSE_CAPSTONE_SYNC_URL_2=${{ secrets.COURSE_CAPSTONE_SYNC_URL_2 }}" >> .env
        shell: bash

      - name: Test
        run: docker-compose -f ./local.yml run --rm backend sh -c "python manage.py test"

      - name: Lint
        run: docker-compose -f ./local.yml run --rm backend sh -c "flake8"
