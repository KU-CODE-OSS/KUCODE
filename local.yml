version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    command: bash -c "
          python manage.py migrate --no-input &&
          python manage.py runserver 0.0.0.0:8000"
    environment:
      - PUBLIC_IP=${PUBLIC_IP}
<<<<<<< HEAD
      - VUE_APP_API_URL=${VUE_APP_API_URL}
      - CORS_ALLOWED_ORIGIN=${CORS_ALLOWED_ORIGIN}
=======
>>>>>>> origin/main
      - FASTAPI_PORT=${FASTAPI_PORT}
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - KOREAUNIV_OPENAPI_CLIENT_ID=${KOREAUNIV_OPENAPI_CLIENT_ID}
      - KOREAUNIV_OPENAPI_CLIENT_SECRET=${KOREAUNIV_OPENAPI_CLIENT_SECRET}
<<<<<<< HEAD
      - STUDENT_SYNC_URL=${STUDENT_SYNC_URL}
      - REPO_SYNC_URL=${REPO_SYNC_URL}
      - REPO_COMMIT_SYNC_URL=${REPO_COMMIT_SYNC_URL}
      - REPO_ISSUE_SYNC_URL=${REPO_ISSUE_SYNC_URL}
      - REPO_PR_SYNC_URL=${REPO_PR_SYNC_URL}
      - REPO_CONTRIBUTOR_SYNC_URL=${REPO_CONTRIBUTOR_SYNC_URL}
      - COURSE_OS_SYNC_URL=${COURSE_OS_SYNC_URL}
      - COURSE_CAPSTONE_SYNC_URL_1=${COURSE_CAPSTONE_SYNC_URL_1}
      - COURSE_CLOUD_SYNC_URL=${COURSE_CLOUD_SYNC_URL}
      - COURSE_SW_PROJECT_SYNC_URL=${COURSE_SW_PROJECT_SYNC_URL}
      - COURSE_CAPSTONE_SYNC_URL_2=${COURSE_CAPSTONE_SYNC_URL_2}


=======
>>>>>>> origin/main
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.envs/.local/django.env
    container_name: dev_backend

  db:
    image: postgres:15-alpine
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.local/postgres.env
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: dev_db

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.envs/.local/pgadmin.env
    volumes:
      - dev_pgadmin:/var/lib/pgadmin
    ports:
      - "9000:80"
    container_name: dev_pgadmin

  frontend:
    build:
      context: .
      dockerfile: ./compose/local/frontend/Dockerfile
    command: bash -c "npm run dev -- --host"
    ports:
      - "80:5173"
    volumes:
      - /app/node_modules
      - ./frontend:/app
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    env_file:
      - .env
    depends_on:
      - backend
    container_name: dev_frontend

volumes:
  dev_postgres_data:
  dev_pgadmin: